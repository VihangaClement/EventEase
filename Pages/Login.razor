@page "/login"
@inject UserSessionService SessionService
@inject NavigationManager NavigationManager

<h1>Login</h1>

<div class="form-group mb-3">
    <label for="username">Username:</label>
    <input type="text" id="username" @bind="usernameInput" class="form-control" />
</div>

<div class="form-group mb-3">
    <label for="password">Password:</label>
    <input type="password" id="password" @bind="passwordInput" class="form-control" />
</div>

<button class="btn btn-primary mt-3" @onclick="PerformLogin">Login</button>

@if (!string.IsNullOrEmpty(loginMessage))
{
    <p class="mt-3 text-danger">@loginMessage</p>
}

@code {
    private string usernameInput = string.Empty;
    private string passwordInput = string.Empty; // <-- NOVO: Campo para a senha
    private string loginMessage = string.Empty;

    private void PerformLogin()
    {
        loginMessage = string.Empty; // Limpa mensagens anteriores

        if (string.IsNullOrEmpty(usernameInput))
        {
            loginMessage = "Username cannot be empty.";
            return;
        }

        if (string.IsNullOrEmpty(passwordInput))
        {
            loginMessage = "Password cannot be empty.";
            return;
        }

        // SIMULAÇÃO DE VALIDAÇÃO DE SENHA (MUITO BÁSICA E NÃO SEGURA!)
        if (usernameInput == "test" && passwordInput == "password123") // Exemplo de credenciais fixas
        {
            SessionService.Login(usernameInput);
            NavigationManager.NavigateTo("/events"); // Redireciona após login
        }
        else
        {
            loginMessage = "Invalid username or password.";
        }
    }
}